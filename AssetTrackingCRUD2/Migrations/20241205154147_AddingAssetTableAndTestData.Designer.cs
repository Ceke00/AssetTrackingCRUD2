// <auto-generated />
using System;
using AssetTrackingCRUD2;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssetTrackingCRUD2.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20241205154147_AddingAssetTableAndTestData")]
    partial class AddingAssetTableAndTestData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AssetTrackingCRUD2.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("brand");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("country");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("model");

                    b.Property<DateTime>("PurchasedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("purchased_date");

                    b.Property<string>("asset_type")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("Id");

                    b.ToTable("Assets");

                    b.HasDiscriminator<string>("asset_type").HasValue("asset_base");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Apple",
                            Country = "germany",
                            Model = "iPhone 12",
                            PurchasedDate = new DateTime(2020, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            asset_type = "phone"
                        });
                });

            modelBuilder.Entity("AssetTrackingCRUD2.Computer", b =>
                {
                    b.HasBaseType("AssetTrackingCRUD2.Asset");

                    b.HasDiscriminator().HasValue("computer");
                });

            modelBuilder.Entity("AssetTrackingCRUD2.Phone", b =>
                {
                    b.HasBaseType("AssetTrackingCRUD2.Asset");

                    b.HasDiscriminator().HasValue("phone");
                });

            modelBuilder.Entity("AssetTrackingCRUD2.Asset", b =>
                {
                    b.OwnsOne("AssetTrackingCRUD2.Price", "Price", b1 =>
                        {
                            b1.Property<int>("AssetId")
                                .HasColumnType("int");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("price_currency");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("price_value");

                            b1.HasKey("AssetId");

                            b1.ToTable("Assets");

                            b1.WithOwner()
                                .HasForeignKey("AssetId");

                            b1.HasData(
                                new
                                {
                                    AssetId = 1,
                                    Currency = "EUR",
                                    Value = 1020m
                                });
                        });

                    b.Navigation("Price")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
